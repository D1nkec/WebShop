@using WebShopFresh.Services.Interface
@inject IOrderService orderService
@model WebShopFresh.Shared.Models.Binding.OrderModels.OrderBinding

@{
    ViewData["Title"] = "Order";
    var productItems = await orderService.GetProductItems(Model.OrderItems.Select(y => y.ProductId.Value).ToList());
    var rowCounter = 1;
}

<div class="container mt-5">
    <h1>Cart</h1>

    @if (Model.OrderItems.Count == 0)
    {
        <div class="text-center mt-5">
            <div class="alert alert-info mb-4" role="alert">
                Your Cart is empty! Continue shopping.
            </div>
            <a class="btn btn-primary mt-3" asp-area="Products" asp-controller="Home" asp-action="Products">
                Start Shopping
            </a>
        </div>
    }
    else
    {
        <form asp-action="Order" method="post">
            <hr />
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="form-label">Delivery Address</label>
                        <div class="form-control-plaintext">
                            @Model.OrderAddress
                        </div>
                        <span asp-validation-for="OrderAddress" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <h4>Selected Products</h4>
            <hr />
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.OrderItems.Count; i++)
                    {
                        var productItem = productItems.FirstOrDefault(y => y.Id == Model.OrderItems[i].ProductId);
                        if (productItem != null)
                        {
                            <tr>
                                <td>@rowCounter</td>
                                <td>@productItem.Name</td>
                                <td>
                                    <input type="number" name="OrderItems[@i].Quantity" value="@Model.OrderItems[i].Quantity" min="1" class="form-control" />
                                    <input type="hidden" name="OrderItems[@i].ProductId" value="@Model.OrderItems[i].ProductId" />
                                </td>
                            </tr>
                            rowCounter++;
                        }
                    }
                </tbody>
            </table>

            <div class="form-group">
                <input type="submit" value="Order" class="btn btn-primary btn-lg" />
            </div>
        </form>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
