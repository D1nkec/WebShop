// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebShopFresh.Data;

#nullable disable

namespace WebShopFresh.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240518161933_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebShopFresh.Models.Dbo.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(2024, 5, 18, 18, 19, 32, 91, DateTimeKind.Local).AddTicks(6176),
                            Description = "Test description",
                            Name = "Test kategorija",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        });
                });

            modelBuilder.Entity("WebShopFresh.Models.Dbo.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            Created = new DateTime(2024, 5, 18, 18, 19, 32, 91, DateTimeKind.Local).AddTicks(6348),
                            Description = "Test description",
                            Name = "Test product",
                            Price = 125m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            Created = new DateTime(2024, 5, 18, 18, 19, 32, 91, DateTimeKind.Local).AddTicks(6356),
                            Description = "neki description",
                            Name = "TELEVIZOR",
                            Price = 125m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 1L,
                            Created = new DateTime(2024, 5, 18, 18, 19, 32, 91, DateTimeKind.Local).AddTicks(6360),
                            Description = "Test description",
                            Name = "kavica",
                            Price = 125m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        });
                });

            modelBuilder.Entity("WebShopFresh.Models.Dbo.Product", b =>
                {
                    b.HasOne("WebShopFresh.Models.Dbo.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebShopFresh.Models.Dbo.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
