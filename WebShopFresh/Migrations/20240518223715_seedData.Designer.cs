// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebShopFresh.Data;

#nullable disable

namespace WebShopFresh.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240518223715_seedData")]
    partial class seedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebShopFresh.Models.Dbo.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(2024, 5, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9358),
                            Description = "Test description",
                            Name = "Test kategorija",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(2024, 5, 9, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9397),
                            Description = "Electronic devices and accessories",
                            Name = "Electronics",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTime(2024, 3, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9400),
                            Description = "Books of various genres",
                            Name = "Books",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTime(2024, 4, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9404),
                            Description = "Men's, Women's, and Children's clothing",
                            Name = "Clothing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTime(2023, 5, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9407),
                            Description = "Appliances and gadgets for home use",
                            Name = "Home Appliances",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTime(2024, 4, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9410),
                            Description = "Toys for children of all ages",
                            Name = "Toys",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        });
                });

            modelBuilder.Entity("WebShopFresh.Models.Dbo.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 2L,
                            Created = new DateTime(2024, 5, 14, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9523),
                            Description = "Latest model smartphone with high-end features",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Smartphone",
                            Price = 999m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 3L,
                            Created = new DateTime(2024, 3, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9529),
                            Description = "A captivating science fiction novel",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Science Fiction Novel",
                            Price = 15m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 4L,
                            Created = new DateTime(2024, 4, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9532),
                            Description = "Comfortable cotton t-shirt",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Men's T-Shirt",
                            Price = 25m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 5L,
                            Created = new DateTime(2023, 5, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9535),
                            Description = "High-efficiency vacuum cleaner",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Vacuum Cleaner",
                            Price = 150m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 1L,
                            Created = new DateTime(2024, 5, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9538),
                            Description = "neki description",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "TEST",
                            Price = 1525m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 6L,
                            Created = new DateTime(2024, 5, 9, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9541),
                            Description = "Popular action figure toy",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Action Figure",
                            Price = 30m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 2L,
                            Created = new DateTime(2024, 4, 29, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9544),
                            Description = "High-performance laptop for work and play",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Laptop",
                            Price = 1200m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 3L,
                            Created = new DateTime(2024, 2, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9547),
                            Description = "An intriguing mystery thriller novel",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Mystery Thriller",
                            Price = 20m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 4L,
                            Created = new DateTime(2024, 3, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9550),
                            Description = "Stylish and comfortable women's jeans",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Women's Jeans",
                            Price = 50m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 5L,
                            Created = new DateTime(2022, 5, 19, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9554),
                            Description = "Multi-functional kitchen blender",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Blender",
                            Price = 80m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        },
                        new
                        {
                            Id = 11L,
                            CategoryId = 6L,
                            Created = new DateTime(2024, 5, 4, 0, 37, 14, 130, DateTimeKind.Local).AddTicks(9557),
                            Description = "Creative building blocks for children",
                            ImageUrl = "/content/test-sku.jpg",
                            Name = "Building Blocks",
                            Price = 40m,
                            Quantity = 0m,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valid = true
                        });
                });

            modelBuilder.Entity("WebShopFresh.Models.Dbo.Product", b =>
                {
                    b.HasOne("WebShopFresh.Models.Dbo.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebShopFresh.Models.Dbo.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
